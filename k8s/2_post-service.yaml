apiVersion: v1
kind: ConfigMap
metadata:
  name: post-service-config
  namespace: cna
  labels:
    app: post-service-config
data:
  QUARKUS_DATASOURCE_URL: jdbc:postgresql://postgres/postgres
  MP_MESSAGING_OUTGOING_POST_CREATE_HOST: amq

---



apiVersion: apps/v1
kind: Deployment
metadata:
  name: post-service
  namespace: cna
spec:
  replicas: 1
  selector:
    matchLabels:
      app: post-service
      version: v1
  template:
    metadata:
      labels:
        app: post-service
        version: v1
    spec:
      initContainers:
      - name: check-amq-ready
        image: busybox
        command: ['sh', '-c', 
          'while ! `nc -z amq 5672`; do sleep 3; done']       
      containers:
      - name: post-service
        image: mkarakas/quarkus-post-service:latest
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: "/health/live"
            port: 8080
            scheme: "HTTP"
          initialDelaySeconds: 0
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 10
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: "/health/ready"
            port: 8080
            scheme: "HTTP"
          initialDelaySeconds: 0
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 10  
        envFrom:
            - configMapRef:
                name: post-service-config      
        ports:
        - containerPort: 8080
          protocol: TCP
        resources:
           limits:
             cpu: "50m"
             memory: "256Mi"
---

kind: Service
apiVersion: v1
metadata:
  name: post-service
  namespace: cna
spec:
  type: NodePort
  selector:
    app: post-service
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080
    nodePort: 32080
